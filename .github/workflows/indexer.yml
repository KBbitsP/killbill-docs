name: Publish

on:
  push:
    branches:
      - v3
  workflow_dispatch:
  
jobs:
  activate:
    runs-on: ubuntu-latest
    if: |
      github.repository_owner == 'asciidoctor' &&
      (github.event_name == 'workflow_dispatch' || !endsWith(github.event.head_commit.message, ' [skip ci]'))
    steps:
    - run: echo ok go
  build:
    needs: activate
    runs-on: ubuntu-latest
    container: algolia/docsearch-scraper:v1.12.0
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Index
      env:
        APPLICATION_ID: ${{ secrets.ALGOLIA_APP_ID }}
        API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
        CONFIG: ${{ github.workspace }}/docsearch/config.json
      run: |
        curl -sL -o $CONFIG https://docs.asciidoctor.org/docsearch-config.json
        INDEX_NAME=$(node -p "JSON.parse(require('fs').readFileSync('$CONFIG')).index_name")
        SITEMAP_URL=$(node -p "JSON.parse(require('fs').readFileSync('$CONFIG')).sitemap_urls[0].replace('.xml', '-home.xml')")
        # only run indexer if index is more than 2 days out of date
        STALENESS_THRESHOLD=172800000
        SITE_LAST_MODIFIED=$(curl -s $SITEMAP_URL | awk '/<lastmod>/{gsub(/<\/?lastmod>/,"");print;exit}' | node -p "Date.parse(require('fs').readFileSync(0).toString().trim()) - $STALENESS_THRESHOLD")
        SITE_LAST_INDEXED=$(curl -s -H X-Algolia-Application-Id:$APPLICATION_ID -H X-Algolia-API-Key:$API_KEY https://$APPLICATION_ID-dsn.algolia.net/1/indexes | node -p "Date.parse(JSON.parse(require('fs').readFileSync(0).toString()).items.find((it) => it.name === '$INDEX_NAME').updatedAt)")
        if [ "${{ github.event.inputs.force }}" = "true" ] || [ $SITE_LAST_MODIFIED -gt $SITE_LAST_INDEXED ]; then
          export HOME=/root
          export INDEX_NAME_TMP="${INDEX_NAME}_${GITHUB_RUN_ID}"
          cd $HOME
          pipenv run python -m src.index
        else
          echo 'SKIP: Index is already up to date.'
        fi